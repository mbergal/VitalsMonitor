<?xml version="1.0" encoding="utf-8"?>
<root>
  <!-- 
    Microsoft ResX Schema 
    
    Version 2.0
    
    The primary goals of this format is to allow a simple XML format 
    that is mostly human readable. The generation and parsing of the 
    various data types are done through the TypeConverter classes 
    associated with the data types.
    
    Example:
    
    ... ado.net/XML headers & schema ...
    <resheader name="resmimetype">text/microsoft-resx</resheader>
    <resheader name="version">2.0</resheader>
    <resheader name="reader">System.Resources.ResXResourceReader, System.Windows.Forms, ...</resheader>
    <resheader name="writer">System.Resources.ResXResourceWriter, System.Windows.Forms, ...</resheader>
    <data name="Name1"><value>this is my long string</value><comment>this is a comment</comment></data>
    <data name="Color1" type="System.Drawing.Color, System.Drawing">Blue</data>
    <data name="Bitmap1" mimetype="application/x-microsoft.net.object.binary.base64">
        <value>[base64 mime encoded serialized .NET Framework object]</value>
    </data>
    <data name="Icon1" type="System.Drawing.Icon, System.Drawing" mimetype="application/x-microsoft.net.object.bytearray.base64">
        <value>[base64 mime encoded string representing a byte array form of the .NET Framework object]</value>
        <comment>This is a comment</comment>
    </data>
                
    There are any number of "resheader" rows that contain simple 
    name/value pairs.
    
    Each data row contains a name, and value. The row also contains a 
    type or mimetype. Type corresponds to a .NET class that support 
    text/value conversion through the TypeConverter architecture. 
    Classes that don't support this are serialized and stored with the 
    mimetype set.
    
    The mimetype is used for serialized objects, and tells the 
    ResXResourceReader how to depersist the object. This is currently not 
    extensible. For a given mimetype the value must be set accordingly:
    
    Note - application/x-microsoft.net.object.binary.base64 is the format 
    that the ResXResourceWriter will generate, however the reader can 
    read any of the formats listed below.
    
    mimetype: application/x-microsoft.net.object.binary.base64
    value   : The object must be serialized with 
            : System.Runtime.Serialization.Formatters.Binary.BinaryFormatter
            : and then encoded with base64 encoding.
    
    mimetype: application/x-microsoft.net.object.soap.base64
    value   : The object must be serialized with 
            : System.Runtime.Serialization.Formatters.Soap.SoapFormatter
            : and then encoded with base64 encoding.

    mimetype: application/x-microsoft.net.object.bytearray.base64
    value   : The object must be serialized into a byte array 
            : using a System.ComponentModel.TypeConverter
            : and then encoded with base64 encoding.
    -->
  <xsd:schema id="root" xmlns="" xmlns:xsd="http://www.w3.org/2001/XMLSchema" xmlns:msdata="urn:schemas-microsoft-com:xml-msdata">
    <xsd:import namespace="http://www.w3.org/XML/1998/namespace" />
    <xsd:element name="root" msdata:IsDataSet="true">
      <xsd:complexType>
        <xsd:choice maxOccurs="unbounded">
          <xsd:element name="metadata">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" />
              </xsd:sequence>
              <xsd:attribute name="name" use="required" type="xsd:string" />
              <xsd:attribute name="type" type="xsd:string" />
              <xsd:attribute name="mimetype" type="xsd:string" />
              <xsd:attribute ref="xml:space" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="assembly">
            <xsd:complexType>
              <xsd:attribute name="alias" type="xsd:string" />
              <xsd:attribute name="name" type="xsd:string" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="data">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" msdata:Ordinal="1" />
                <xsd:element name="comment" type="xsd:string" minOccurs="0" msdata:Ordinal="2" />
              </xsd:sequence>
              <xsd:attribute name="name" type="xsd:string" use="required" msdata:Ordinal="1" />
              <xsd:attribute name="type" type="xsd:string" msdata:Ordinal="3" />
              <xsd:attribute name="mimetype" type="xsd:string" msdata:Ordinal="4" />
              <xsd:attribute ref="xml:space" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="resheader">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" msdata:Ordinal="1" />
              </xsd:sequence>
              <xsd:attribute name="name" type="xsd:string" use="required" />
            </xsd:complexType>
          </xsd:element>
        </xsd:choice>
      </xsd:complexType>
    </xsd:element>
  </xsd:schema>
  <resheader name="resmimetype">
    <value>text/microsoft-resx</value>
  </resheader>
  <resheader name="version">
    <value>2.0</value>
  </resheader>
  <resheader name="reader">
    <value>System.Resources.ResXResourceReader, System.Windows.Forms, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089</value>
  </resheader>
  <resheader name="writer">
    <value>System.Resources.ResXResourceWriter, System.Windows.Forms, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089</value>
  </resheader>
  <assembly alias="System.Drawing" name="System.Drawing, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b03f5f7f11d50a3a" />
  <data name="pictureBox1.Image" type="System.Drawing.Bitmap, System.Drawing" mimetype="application/x-microsoft.net.object.bytearray.base64">
    <value>
        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
        rkJggg==
</value>
  </data>
</root>